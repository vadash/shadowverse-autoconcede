; Note: parameters of the X,Y is the center of the coordinates,
; and the W,H is the offset distance to the center,
; So the search range is (X-W, Y-H)-->(X+W, Y+H).
; err1 is the character "0" allowed reduction in percentage.
; err0 is the character "_" allowed reduction in percentage.

FindText(x,y,text,color,w=150,h=150,ByRef rx="",ByRef ry=""
  ,err1=0,err0=0)
{
  SysGet, zx, 76
  SysGet, zy, 77
  SysGet, zw, 78
  SysGet, zh, 79
  left:=x-w, right:=x+w, up:=y-h, down:=y+h
  left:=left<zx ? zx:left
  right:=right>zx+zw-1 ? zx+zw-1:right
  up:=up<zy ? zy:up, down:=down>zy+zh-1 ? zy+zh-1:down
  x:=left, y:=up, w:=right-left+1, h:=down-up+1
  if (w<1 or h<1)
    Return, 0
  bch:=A_BatchLines
  SetBatchLines, -1
  GetBitsFromScreen(x,y,w,h,Scan0,Stride,bits)
  sx:=0, sy:=0, sw:=w, sh:=h
  if findstr(Scan0,Stride,sx,sy,sw,sh,text,color
    ,rx,ry,err1,err0)
  {
    rx+=x, ry+=y
    SetBatchLines, %bch%
    Return, 1
  }
  if (err1=0 and err0=0)
    and findstr(Scan0,Stride,sx,sy,sw,sh,text,color
      ,rx,ry,0.05,0.05)
  {
    rx+=x, ry+=y
    SetBatchLines, %bch%
    Return, 1
  }
  SetBatchLines, %bch%
  Return, 0
}

GetBitsFromScreen(x,y,w,h,ByRef Scan0,ByRef Stride,ByRef bits)
{
  VarSetCapacity(bits, w*h*4, 0)
  Ptr:=A_PtrSize ? "Ptr" : "UInt"
  win:=DllCall("GetDesktopWindow", Ptr)
  hDC:=DllCall("GetDC", Ptr,win, Ptr)
  mDC:=DllCall("CreateCompatibleDC", Ptr,hDC, Ptr)
  hBM:=DllCall("CreateCompatibleBitmap", Ptr,hDC
    , "int",w, "int",h, Ptr)
  oBM:=DllCall("SelectObject", Ptr,mDC, Ptr,hBM, Ptr)
  DllCall("BitBlt", Ptr,mDC, "int",0, "int",0, "int",w
    , "int",h, Ptr,hDC, "int",x, "int",y, "uint",0xCC0020)
  DllCall("ReleaseDC", Ptr,win, Ptr,hDC)
  VarSetCapacity(bi, 40, 0)
  NumPut(40, bi, 0, "int"), NumPut(w, bi, 4, "int")
  NumPut(-h, bi, 8, "int"), NumPut(1, bi, 12, "short")
  NumPut(bpp:=32, bi, 14, "short"), NumPut(0, bi, 16, "int")
  DllCall("GetDIBits", Ptr,mDC, Ptr,hBM
    , "int",0, "int",h, Ptr,&bits, Ptr,&bi, "int",0)
  DllCall("SelectObject", Ptr,mDC, Ptr,oBM)
  DllCall("DeleteObject", Ptr,hBM)
  DllCall("DeleteDC", Ptr,mDC)
  Scan0:=&bits, Stride:=((w*bpp+31)//32)*4
}

FindStr(Scan0,Stride,sx,sy,sw,sh,text,color
  , ByRef rx, ByRef ry, err1, err0)
{
  static MyFunc
  if !MyFunc
  {
    x32:="5589E583EC408B451C0FAF45148B5518C1E20201D08945F"
    . "48B5520B80000000029D0C1E00289C28B451401D08945DCC74"
    . "5F000000000837D08010F85B20000008B450CC1E81025FF000"
    . "0008945D88B450CC1E80825FF0000008945D48B450C25FF000"
    . "0008945D0C745F800000000EB75C745FC00000000EB5A8B45F"
    . "483C00289C28B451001D00FB6000FB6C03B45D875368B45F48"
    . "3C00189C28B451001D00FB6000FB6C03B45D4751E8B55F48B4"
    . "51001D00FB6000FB6C03B45D0750B8B55F08B452801D0C6003"
    . "18345FC018345F4048345F0018B45FC3B45207C9E8345F8018"
    . "B45DC0145F48B45F83B45247C83E9A30000008B450C83C0016"
    . "9C0E803000089450CC745F800000000EB7FC745FC00000000E"
    . "B648B45F483C00289C28B451001D00FB6000FB6C069D02B010"
    . "0008B45F483C00189C18B451001C80FB6000FB6C069C04B020"
    . "0008D0C028B55F48B451001D00FB6000FB6C06BC07201C83B4"
    . "50C730B8B55F08B452801D0C600318345FC018345F4048345F"
    . "0018B45FC3B45207C948345F8018B45DC0145F48B45F83B452"
    . "40F8C75FFFFFFC745E8000000008B45E88945EC8B45EC8945F"
    . "0C745F800000000EB7CC745FC00000000EB678B45F08D50018"
    . "955F089C28B452C01D00FB6003C3175278B45EC8D50018955E"
    . "C8D1485000000008B453001C28B45F80FAF452089C18B45FC0"
    . "1C88902EB258B45E88D50018955E88D1485000000008B45340"
    . "1C28B45F80FAF452089C18B45FC01C889028345FC018B45FC3"
    . "B45387C918345F8018B45F83B453C0F8C78FFFFFF8B45202B4"
    . "53883C0018945CC8B45242B453C83C0018945C88B45EC3945E"
    . "80F4D45E88945C4C745F800000000E9E3000000C745FC00000"
    . "000E9C70000008B45F80FAF452089C28B45FC01D08945F48B4"
    . "5408945E48B45448945E0C745F000000000EB708B45F03B45E"
    . "C7D2E8B45F08D1485000000008B453001D08B108B45F401D08"
    . "9C28B452801D00FB6003C31740A836DE401837DE40078638B4"
    . "5F03B45E87D2E8B45F08D1485000000008B453401D08B108B4"
    . "5F401D089C28B452801D00FB6003C30740A836DE001837DE00"
    . "078308345F0018B45F03B45C47C888B55188B45FC01C28B454"
    . "889108B551C8B45F801C28B454C8910B801000000EB2990EB0"
    . "1908345FC018B45FC3B45CC0F8C2DFFFFFF8345F8018B45F83"
    . "B45C80F8C11FFFFFFB800000000C9C248009090"
    x64:="554889E54883EC40894D108955184C89452044894D288B4"
    . "5380FAF45288B5530C1E20201D08945F48B5540B8000000002"
    . "9D0C1E00289C28B452801D08945DCC745F000000000837D100"
    . "10F85C90000008B4518C1E81025FF0000008945D88B4518C1E"
    . "80825FF0000008945D48B451825FF0000008945D0C745F8000"
    . "00000E985000000C745FC00000000EB6A8B45F483C0024863D"
    . "0488B45204801D00FB6000FB6C03B45D875438B45F483C0014"
    . "863D0488B45204801D00FB6000FB6C03B45D475288B45F4486"
    . "3D0488B45204801D00FB6000FB6C03B45D075108B45F04863D"
    . "0488B45504801D0C600318345FC018345F4048345F0018B45F"
    . "C3B45407C8E8345F8018B45DC0145F48B45F83B45480F8C6FF"
    . "FFFFFE9B60000008B451883C00169C0E8030000894518C745F"
    . "800000000E98F000000C745FC00000000EB748B45F483C0024"
    . "863D0488B45204801D00FB6000FB6C069D02B0100008B45F48"
    . "3C0014863C8488B45204801C80FB6000FB6C069C04B0200008"
    . "D0C028B45F44863D0488B45204801D00FB6000FB6C06BC0720"
    . "1C83B451873108B45F04863D0488B45504801D0C600318345F"
    . "C018345F4048345F0018B45FC3B45407C848345F8018B45DC0"
    . "145F48B45F83B45480F8C65FFFFFFC745E8000000008B45E88"
    . "945EC8B45EC8945F0C745F800000000E989000000C745FC000"
    . "00000EB748B45F08D50018955F04863D0488B45584801D00FB"
    . "6003C31752C8B45EC8D50018955EC4898488D1485000000004"
    . "88B45604801C28B45F80FAF454089C18B45FC01C88902EB2A8"
    . "B45E88D50018955E84898488D148500000000488B45684801C"
    . "28B45F80FAF454089C18B45FC01C889028345FC018B45FC3B4"
    . "5707C848345F8018B45F83B45780F8C6BFFFFFF8B45402B457"
    . "083C0018945CC8B45482B457883C0018945C88B45EC3945E80"
    . "F4D45E88945C4C745F800000000E908010000C745FC0000000"
    . "0E9EC0000008B45F80FAF454089C28B45FC01D08945F48B858"
    . "00000008945E48B85880000008945E0C745F000000000E9800"
    . "000008B45F03B45EC7D368B45F04898488D148500000000488"
    . "B45604801D08B108B45F401D04863D0488B45504801D00FB60"
    . "03C31740A836DE401837DE40078778B45F03B45E87D368B45F"
    . "04898488D148500000000488B45684801D08B108B45F401D04"
    . "863D0488B45504801D00FB6003C30740A836DE001837DE0007"
    . "83C8345F0018B45F03B45C40F8C74FFFFFF8B55308B45FC01C"
    . "2488B859000000089108B55388B45F801C2488B85980000008"
    . "910B801000000EB2990EB01908345FC018B45FC3B45CC0F8C0"
    . "8FFFFFF8345F8018B45F83B45C80F8CECFEFFFFB8000000004"
    . "883C4405DC390909090909090909090909090"
    MCode(MyFunc, A_PtrSize=8 ? x64:x32)
  }
  v:=Trim(RegExReplace(text,"[^_0\n]+"),"`n") . "`n"
  w:=InStr(v,"`n")-1, h:=StrLen(v)//(w+1)
  fmt:=A_FormatInteger
  SetFormat, IntegerFast, d
  re:="[0_]{" (w+0) "}\n"
  SetFormat, IntegerFast, %fmt%
  if (w>sw or h>sh or w<1 or RegExReplace(v,re)!="")
    Return, 0
  v:=StrReplace(v,"`n")
  if InStr(color,"-")
    v:=StrReplace(v,"_","1"), r:=err1, err1:=err0, err0:=r
  else
    v:=StrReplace(StrReplace(v,"0","1"),"_","0")
  if err1!=0
    err1:=Round(StrLen(StrReplace(v,"0"))*err1)
  if err0!=0
    err0:=Round(StrLen(StrReplace(v,"1"))*err0)
  mode:=!InStr(color,"*")
  color:=RegExReplace(color,"[*\-]")
  text:=v, k:=StrLen(text)*4
  VarSetCapacity(ss, sw*sh, Asc("0"))
  VarSetCapacity(s1, k, 0), VarSetCapacity(s0, k, 0)
  VarSetCapacity(x, 8, 0), VarSetCapacity(y, 8, 0)
  if DllCall(&MyFunc, "int",mode
    , "uint",color, "ptr",Scan0, "int",Stride
    , "int",sx, "int",sy, "int",sw, "int",sh
    , "ptr",&ss, "Astr",text, "ptr",&s1, "ptr",&s0
    , "int",w, "int",h, "int",err1, "int",err0
    , "int*",x, "int*",y)
  {
    rx:=x+w//2, ry:=y+h//2
    Return, 1
  }
  Return, 0
}

MCode(ByRef code, hex)
{
  ListLines, Off
  bch:=A_BatchLines
  SetBatchLines, -1
  VarSetCapacity(code, StrLen(hex)//2)
  Loop, % StrLen(hex)//2
    NumPut("0x" . SubStr(hex,2*A_Index-1,2)
      , code, A_Index-1, "char")
  Ptr:=A_PtrSize ? "Ptr" : "UInt"
  DllCall("VirtualProtect", Ptr,&code, Ptr
    ,VarSetCapacity(code), "uint",0x40, Ptr . "*",0)
  SetBatchLines, %bch%
  ListLines, On
}
